-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS hotel_db.audit_logs
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    user_id uuid,
    action character varying(255) COLLATE pg_catalog."default",
    entity_type character varying(255) COLLATE pg_catalog."default",
    entity_id uuid,
    description text COLLATE pg_catalog."default",
    metadata jsonb,
    performed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT audit_logs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.bookings
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    customer_id uuid,
    room_id uuid,
    check_in_date date,
    check_out_date date,
    status character varying(255) COLLATE pg_catalog."default" DEFAULT 'booked'::character varying,
    special_requests text COLLATE pg_catalog."default",
    number_of_guests integer,
    total_amount numeric(10, 2),
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    CONSTRAINT bookings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.brands
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT brands_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.check_ins
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    booking_id uuid,
    checked_in_by uuid,
    checked_in_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT check_ins_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.check_outs
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    booking_id uuid,
    checked_out_by uuid,
    checked_out_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    additional_charges numeric(10, 2),
    notes text COLLATE pg_catalog."default",
    CONSTRAINT check_outs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.customers
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    full_name character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    id_type character varying(255) COLLATE pg_catalog."default",
    id_number character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT customers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.emergency_contacts
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    customer_id uuid,
    name character varying(255) COLLATE pg_catalog."default",
    relationship character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT emergency_contacts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.hotels
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    city character varying(255) COLLATE pg_catalog."default",
    country character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    brand_id uuid,
    CONSTRAINT hotels_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.payment_methods
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    name character varying(255) COLLATE pg_catalog."default",
    details jsonb,
    is_active boolean DEFAULT true,
    CONSTRAINT payment_methods_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.payments
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    booking_id uuid,
    payment_method_id uuid,
    amount numeric(10, 2),
    paid_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    reference character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT payments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.phinxlog
(
    version bigint NOT NULL,
    migration_name character varying(100) COLLATE pg_catalog."default",
    start_time timestamp without time zone,
    end_time timestamp without time zone,
    breakpoint boolean NOT NULL DEFAULT false,
    CONSTRAINT phinxlog_pkey PRIMARY KEY (version)
);

CREATE TABLE IF NOT EXISTS hotel_db.room_types
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    hotel_id uuid,
    name character varying(255) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    price_per_night numeric(10, 2),
    max_occupancy integer,
    amenities jsonb,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    CONSTRAINT room_types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.rooms
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    hotel_id uuid,
    room_type_id uuid,
    room_number character varying(255) COLLATE pg_catalog."default",
    floor integer,
    status character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    CONSTRAINT rooms_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.settings
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    hotel_id uuid,
    key character varying(255) COLLATE pg_catalog."default",
    value text COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT settings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS hotel_db.users
(
    id uuid NOT NULL DEFAULT hotel_db.uuid_generate_v4(),
    hotel_id uuid,
    name character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    password_hash character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS hotel_db.audit_logs
    ADD CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES hotel_db.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS hotel_db.bookings
    ADD CONSTRAINT bookings_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES hotel_db.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS hotel_db.bookings
    ADD CONSTRAINT bookings_room_id_fkey FOREIGN KEY (room_id)
    REFERENCES hotel_db.rooms (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS hotel_db.check_ins
    ADD CONSTRAINT check_ins_booking_id_fkey FOREIGN KEY (booking_id)
    REFERENCES hotel_db.bookings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.check_ins
    ADD CONSTRAINT check_ins_checked_in_by_fkey FOREIGN KEY (checked_in_by)
    REFERENCES hotel_db.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel_db.check_outs
    ADD CONSTRAINT check_outs_booking_id_fkey FOREIGN KEY (booking_id)
    REFERENCES hotel_db.bookings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.check_outs
    ADD CONSTRAINT check_outs_checked_out_by_fkey FOREIGN KEY (checked_out_by)
    REFERENCES hotel_db.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel_db.emergency_contacts
    ADD CONSTRAINT emergency_contacts_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES hotel_db.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.hotels
    ADD CONSTRAINT hotels_brand_id_fkey FOREIGN KEY (brand_id)
    REFERENCES hotel_db.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS hotel_db.payments
    ADD CONSTRAINT payments_booking_id_fkey FOREIGN KEY (booking_id)
    REFERENCES hotel_db.bookings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.payments
    ADD CONSTRAINT payments_payment_method_id_fkey FOREIGN KEY (payment_method_id)
    REFERENCES hotel_db.payment_methods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS hotel_db.room_types
    ADD CONSTRAINT room_types_hotel_id_fkey FOREIGN KEY (hotel_id)
    REFERENCES hotel_db.hotels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.rooms
    ADD CONSTRAINT rooms_hotel_id_fkey FOREIGN KEY (hotel_id)
    REFERENCES hotel_db.hotels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.rooms
    ADD CONSTRAINT rooms_room_type_id_fkey FOREIGN KEY (room_type_id)
    REFERENCES hotel_db.room_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS hotel_db.settings
    ADD CONSTRAINT settings_hotel_id_fkey FOREIGN KEY (hotel_id)
    REFERENCES hotel_db.hotels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS hotel_db.users
    ADD CONSTRAINT users_hotel_id_fkey FOREIGN KEY (hotel_id)
    REFERENCES hotel_db.hotels (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;